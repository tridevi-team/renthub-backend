tags:
    - name: Auth
      description: Authentication API

components:
    schemas:
        LoginRequest:
            type: object
            required:
                - username
                - password
            properties:
                username:
                    type: string
                    minLength: 8
                    maxLength: 50
                    pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                    description: Accept email or phone number
                    example: tmquang0209@gmail.com
                password:
                    type: string
                    maxLength: 10
                    example: 123456Aa
        LoginSuccess:
            type: object
            required:
                - success
                - code
                - message
                - data
            properties:
                success:
                    type: boolean
                    description: status of the request
                    example: true
                code:
                    type: string
                    example: LOGIN_SUCCESS
                    pattern: "^(LOGIN_SUCCESS)$"
                message:
                    type: string
                    description: message of the request
                    example: Login successfully
                    pattern: "^(Login successfully)$"
                data:
                    type: object
                    required:
                        - id
                        - email
                        - fullName
                        - gender
                        - phoneNumber
                        - address
                        - birthday
                        - role
                        - type
                        - status
                        - verify
                        - firstLogin
                        - token
                        - houses
                    properties:
                        id:
                            type: string
                            example: 231c665c-dc53-42c6-88cc-e36490cb52a8
                        email:
                            type: string
                            example: example@gmail.com
                        fullName:
                            type: string
                            example: John Doe
                        gender:
                            type: string
                            enum:
                                - male
                                - female
                                - other
                            example: male
                        phoneNumber:
                            type: string
                            example: 0123456789
                            maxLength: 11
                            pattern: ^0\d{9,10}$
                        address:
                            type: string
                            example: 123 Nguyen Van Linh, District 7, Ho Chi Minh City
                            maxLength: 255
                        birthday:
                            type: string
                            example: 1969-12-31
                            maxLength: 10
                            pattern: ^\d{4}-\d{2}-\d{2}$
                        role:
                            type: string
                            example: user
                            enum:
                                - user
                                - admin
                        type:
                            type: string
                            example: free
                            enum:
                                - free
                                - premium
                        status:
                            type: integer
                            example: 1
                        verify:
                            type: integer
                            example: 1
                        firstLogin:
                            type: integer
                            example: 1
                        token:
                            type: string
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyMzFjNjY1Yy1kYzUzLTQyYzYtODhjYy1lMzY0OTBjYjUyYTgiLCJpYXQiOjE2MjYwNjYwNzYsImV4cCI6MTYyNjA2NjA3N30.7qkjhwkhjweyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIzMWM2NjVjLWRjNTMtNDJjNi04OGNjLWUzNjQ5MGNiNTJhOCIsImVtYWlsIjoidG1xdWFuZzAyMDlAZ21haWwuY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkRlEyenA1TjJpeDFyWWxBanVRTWtZLnpiWFFFQ1VtZU1wMHgzRDVsRnJtNnZUOVFtb0lmdnkiLCJyb2xlIjoidXNlciIsInN0YXR1cyI6MSwiaWF0IjoxNzI2OTI4MjUzLCJleHAiOjE3MjY5MzE4NTN9.bC3TooxQsvvdBucF_QR2I14c1OKBBAUrUlEKHx0jbvc
                        houses:
                            type: array
                            maxItems: 100
                            items:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        example: 231c665c-dc53-42c6-88cc-e36490cb52a8
                                    name:
                                        type: string
                                        example: My house
                                    address:
                                        type: object
                                        properties:
                                            city:
                                                type: string
                                                example: Ho Chi Minh City
                                            district:
                                                type: string
                                                example: District 7
                                            ward:
                                                type: string
                                                example: Phu My
                                            street:
                                                type: string
                                                example: 123 Nguyen Van Linh
                                    contractDefault:
                                        type: string
                                        format: uuid
                                        example: 231c665c-dc53-42c6-88cc-e36490cb52a8
                                    description:
                                        type: string
                                        example: My house description
                                    collectionCycle:
                                        type: string
                                        example: 1
                                    invoiceDate:
                                        type: string
                                        example: 1
                                    numCollectDays:
                                        type: integer
                                        example: 1
                                    status:
                                        type: boolean
                                        example: true
                                    createdBy:
                                        type: string
                                        example: 00aa0612-e5ca-4e06-a6e4-a761dff7e3bb
                                    createdAt:
                                        type: string
                                        example: 2024-09-30T15:29:32.000Z
                                    updatedBy:
                                        type: string
                                        example: 00aa0612-e5ca-4e06-a6e4-a761dff7e3bb
                                    updatedAt:
                                        type: string
                                        example: 2024-09-30T15:29:32.000Z
                                    permissions:
                                        type: object
                                        properties:
                                            house:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: false
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            role:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            room:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            renter:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            service:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            bill:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            equipment:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true
                                            payment:
                                                type: object
                                                properties:
                                                    create:
                                                        type: boolean
                                                        example: true
                                                    read:
                                                        type: boolean
                                                        example: true
                                                    update:
                                                        type: boolean
                                                        example: true
                                                    delete:
                                                        type: boolean
                                                        example: true

        InvalidUser:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: INVALID_USER
                message:
                    type: string
                    example: Invalid user
            required:
                - success
                - code
                - message

        VerifyAccountFirst:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    pattern: "^(VERIFY_ACCOUNT_FIRST)$"
                    maxLength: 255
                    example: VERIFY_ACCOUNT_FIRST
                message:
                    type: string
                    pattern: "^(Verify your account first)$"
                    maxLength: 255
                    example: Verify your account first
            required:
                - success
                - code
                - message

        AccountDisabled:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    pattern: "^(ACCOUNT_DISABLED)$"
                    example: ACCOUNT_DISABLED
                message:
                    type: string
                    pattern: "^(Account is disabled)$"
                    maxLength: 255
                    example: Account is disabled
            required:
                - success
                - code
                - message

        SignupRequest:
            type: object
            properties:
                email:
                    type: string
                    example: example@gmail.com
                fullName:
                    type: string
                    example: John Doe
                gender:
                    type: string
                    example: male
                    enum: [male, female, other]
                phoneNumber:
                    type: string
                    example: 0123456789
                password:
                    type: string
                    example: 123456Aa
                confirmPassword:
                    type: string
                    example: 123456Aa
            required:
                - email
                - fullName
                - gender
                - phoneNumber
                - password
                - confirmPassword

        SendCodeSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: CHECK_EMAIL_VERIFY_ACCOUNT
                message:
                    type: string
                    example: Please check your email to verify your account

        UserExists:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: USER_ALREADY_EXISTS
                message:
                    type: string
                    example: User already exists

        VerifyAccountRequest:
            type: object
            properties:
                email:
                    type: string
                    example: example@gmail.com
                verifyCode:
                    type: string
                    example: 1234
                    description: Verification code sent to email. It has 4 digits
            required:
                - email
                - verifyCode

        VerifyAccountSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: VERIFY_ACCOUNT_SUCCESS
                message:
                    type: string
                    example: Verify account successfully

        InvalidVerificationCode:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: INVALID_VERIFICATION_CODE
                message:
                    type: string
                    example: Verification code is incorrect

        AccountVerified:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: ACCOUNT_ALREADY_VERIFIED
                message:
                    type: string
                    example: Account has been verified

        ResetPasswordSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: PASSWORD_RESET_SUCCESS
                message:
                    type: string
                    example: Password reset successfully

paths:
    /auth/login:
        post:
            tags: [Auth]
            summary: Login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LoginRequest"

            responses:
                default:
                    description: OK
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/LoginSuccess"
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/LoginSuccess"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "401":
                    description: Login failed. Username or password is incorrect
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/InvalidUser"
                "403":
                    description: Login failed. User is not activated or account is disabled
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/VerifyAccountFirst"
                                    - $ref: "#/components/schemas/AccountDisabled"

    /auth/signup:
        post:
            tags: [Auth]
            summary: Register a new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SignupRequest"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SendCodeSuccess"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "409":
                    description: User already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserExists"

    /auth/verify-account:
        put:
            tags: [Auth]
            summary: Verify account
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/VerifyAccountRequest"

            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/VerifyAccountSuccess"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"

                "401":
                    description: Verification code is incorrect
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/InvalidVerificationCode"

                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetUserNotFound"
                "409":
                    description: User already verified
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccountVerified"
    /auth/resend-code:
        put:
            tags: [Auth]
            summary: Resend verification code
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: example@gmail.com

            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SendCodeSuccess"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"

                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetUserNotFound"

                "409":
                    description: User already verified
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccountVerified"

    /auth/forgot-password:
        post:
            tags: [Auth]
            summary: Forgot password
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: example@gmail.com

            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CheckMailResetPassword"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetUserNotFound"

    /auth/reset-password:
        put:
            tags: [Auth]
            summary: Reset password
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: example@gmail.com
                                code:
                                    type: string
                                    example: 1234
                                password:
                                    type: string
                                    example: 123456
                                confirmPassword:
                                    type: string
                                    example: 123456

            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ResetPasswordSuccess"
                "400":
                    description: Input data is invalid
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"

                "401":
                    description: Verification code is incorrect
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/InvalidVerificationCode"

                "404":
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetUserNotFound"
