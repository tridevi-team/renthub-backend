openapi: "3.0.3"
info:
    title: Room API
    version: 1.0.0

tags:
    - name: Room
      description: Room API. This API is used to manage rooms.
components:
    schemas:
        RoomInfo:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: Room ID
                    example: 123e4567-e89b-12d3-a456-426614174000
                name:
                    type: string
                    description: Room name
                    example: Room 1
                maxRenters:
                    type: integer
                    description: Maximum number of renters
                    example: 4
                roomArea:
                    type: number
                    description: Room area in square meters
                    example: 25.5
                price:
                    type: number
                    description: Room price in VND
                    example: 2500000
                description:
                    type: string
                    description: Room description
                    example: This is a beautiful room
                house:
                    type: object
                    properties:
                        id:
                            type: string
                            format: uuid
                            description: House ID
                            example: 123e4567-e89b-12d3-a456-426614174000
                        name:
                            type: string
                            description: House name
                            example: House 1
                        description:
                            type: string
                            description: House description
                            example: This is a beautiful house
                        floor:
                            type: object
                            properties:
                                id:
                                    type: string
                                    format: uuid
                                    description: Floor ID
                                    example: 123e4567-e89b-12d3-a456-426614174000
                                name:
                                    type: string
                                    description: Floor name
                                    example: Floor 1
                                description:
                                    type: string
                                    description: Floor description
                                    example: This is a beautiful floor
                services:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                                description: Service ID
                                example: 123e4567-e89b-12d3-a456-426614174000
                            name:
                                type: string
                                description: Service name
                                example: Elevator
                            quantity:
                                type: integer
                                description: Service quantity
                                example: 1
                            unitPrice:
                                type: number
                                description: Service unit price in VND
                                example: 50000
                            type:
                                type: string
                                description: Service type
                                example: PEOPLE
                            description:
                                type: string
                                description: Service description
                                example: This is an elevator
                images:
                    type: array
                    items:
                        type: string
                        format: uri
                        description: Image URL
                        example: https://picsum.photos/200/300
                status:
                    type: string
                    enum:
                        - AVAILABLE
                        - RENTED
                        - PENDING
                        - EXPIRED
                        - MAINTENANCE
                    description: Room status
                    example: AVAILABLE
                createdBy:
                    type: string
                    format: uuid
                    description: User ID who created the room
                    example: 123e4567-e89b-12d3-a456-426614174000
                createdAt:
                    type: string
                    format: date-time
                    description: Room created date
                    example: 2024-09-26T15:09:58.000Z
                updatedBy:
                    type: string
                    format: uuid
                    description: User ID who updated the room
                    example: 123e4567-e89b-12d3-a456-426614174000
                updatedAt:
                    type: string
                    format: date-time
                    description: Room updated date
                    example: 2024-09-26T15:09:58.000Z

        RoomBasicInfo:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: Room ID
                    example: 123e4567-e89b-12d3-a456-426614174000
                thumbnail:
                    type: string
                    format: uri
                    description: Room thumbnail URL
                    example: https://picsum.photos/200/300
                name:
                    type: string
                    description: Room name
                    example: Room 1
                maxRenters:
                    type: integer
                    description: Maximum number of renters
                    example: 4
                roomArea:
                    type: number
                    description: Room area in square meters
                    example: 25.5
                price:
                    type: number
                    description: Room price in VND
                    example: 2500000
                status:
                    type: string
                    enum:
                        - AVAILABLE
                        - RENTED
                        - PENDING
                        - EXPIRED
                        - MAINTENANCE
                    description: Room status
                    example: AVAILABLE
                description:
                    type: string
                    description: Room description
                    example: This is a beautiful room

        RoomDetailsSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: GET_ROOM_DETAILS_SUCCESS
                message:
                    type: string
                    example: Room details retrieved successfully
                data:
                    $ref: "#/components/schemas/RoomInfo"

        RoomNotFound:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: ROOM_NOT_FOUND
                message:
                    type: string
                    example: Room not found

        NoRoomsFound:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: NO_ROOMS_FOUND
                message:
                    type: string
                    example: No rooms found

        RoomRequestInput:
            type: object
            properties:
                name:
                    type: string
                    description: Room name
                    example: Room 1
                floor:
                    type: string
                    format: uuid
                    description: Floor ID
                    example: 123e4567-e89b-12d3-a456-426614174000
                maxRenters:
                    type: integer
                    description: Maximum number of renters
                    example: 4
                roomArea:
                    type: number
                    description: Room area in square meters
                    example: 25.5
                price:
                    type: number
                    description: Room price in VND
                    example: 2500000
                services:
                    type: array
                    items:
                        type: object
                        properties:
                            serviceId:
                                type: string
                                format: uuid
                                description: Service ID
                                example: 123e4567-e89b-12d3-a456-426614174000
                            quantity:
                                type: integer
                                description: Service quantity
                                example: 1
                            startIndex:
                                type: integer
                                description: Start index of the service
                                example: 0
                        required:
                            - serviceId
                images:
                    type: array
                    items:
                        type: string
                        format: uri
                        description: Image URL
                        example: https://picsum.photos/200/300
                description:
                    type: string
                    description: Room description
                    example: This is a beautiful room
                status:
                    type: string
                    enum:
                        - AVAILABLE
                        - RENTED
                        - PENDING
                        - EXPIRED
                        - MAINTENANCE
                    description: Room status
                    example: AVAILABLE
            required:
                - name
                - floor

        RoomAlreadyExists:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                code:
                    type: string
                    example: ROOM_ALREADY_EXISTS
                message:
                    type: string
                    example: Room already exists

        GetRoomByHouseSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: GET_ROOMS_BY_HOUSE_SUCCESS
                message:
                    type: string
                    example: Rooms by house retrieved successfully
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/RoomInfo"

        CreateRoomSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: CREATE_ROOM_SUCCESS
                message:
                    type: string
                    example: Room created successfully
                data:
                    $ref: "#/components/schemas/RoomInfo"

        UpdateRoomSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: UPDATE_ROOM_SUCCESS
                message:
                    type: string
                    example: Room updated successfully
                data:
                    $ref: "#/components/schemas/RoomInfo"

        DeleteRoomSuccess:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                code:
                    type: string
                    example: DELETE_ROOM_SUCCESS
                message:
                    type: string
                    example: Room deleted successfully

paths:
    /rooms/{houseId}/create:
        post:
            tags:
                - Room
            summary: Create a new room
            description: Create a new room in a house
            operationId: createRoom
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: houseId
                  required: true
                  description: House ID
                  schema:
                      type: string
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-426614174000
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RoomRequestInput"
            responses:
                "201":
                    description: Room created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CreateRoomSuccess"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/TokenExpired"
                                    - $ref: "#/components/schemas/TokenInvalid"
                "404":
                    description: House not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NoHouseFound"
                "409":
                    description: Room already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomAlreadyExists"

    # /rooms/{houseId}/list:
    #     get:
    #         tags:
    #             - Room
    #         summary: Get rooms by house
    #         description: Get rooms by house ID
    #         operationId: getRoomsByHouse
    #         parameters:
    #             - in: path
    #               name: houseId
    #               required: true
    #               description: House ID
    #               schema:
    #                   type: string
    #                   format: uuid
    #                   example: 123e4567-e89b-12d3-a456-426614174000
    #         responses:
    #             "200":
    #                 description: Rooms by house retrieved successfully
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/GetRoomByHouseSuccess"
    #             "400":
    #                 description: Invalid input
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/ValidationError"
    #             "404":
    #                 description: House not found
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/NoHouseFound"

    /rooms/{roomId}/details:
        get:
            tags:
                - Room
            summary: Get room details
            description: Get room details by room ID
            operationId: getRoomDetails
            parameters:
                - in: path
                  name: roomId
                  required: true
                  description: Room ID
                  schema:
                      type: string
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-426614174000
            responses:
                "200":
                    description: Room details retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomDetailsSuccess"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "404":
                    description: Room not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomNotFound"

    /rooms/{roomId}/update:
        put:
            tags:
                - Room
            summary: Update room
            description: Update room by room ID
            operationId: updateRoom
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: roomId
                  required: true
                  description: Room ID
                  schema:
                      type: string
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-426614174000
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RoomRequestInput"
            responses:
                "200":
                    description: Room updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UpdateRoomSuccess"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/TokenExpired"
                                    - $ref: "#/components/schemas/TokenInvalid"
                "404":
                    description: Room not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomNotFound"
                "409":
                    description: Room already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomAlreadyExists"

    /rooms/{roomId}/delete:
        delete:
            tags:
                - Room
            summary: Delete room
            description: Delete room by room ID
            operationId: deleteRoom
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: roomId
                  required: true
                  description: Room ID
                  schema:
                      type: string
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-426614174000
            responses:
                "200":
                    description: Room deleted successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DeleteRoomSuccess"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/sschemas/TokenExpired"
                                    - $ref: "#/components/schemas/TokenInvalid"
                "404":
                    description: Room not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomNotFound"

    /rooms/{houseId}/delete-rooms:
        delete:
            tags:
                - Room
            summary: Delete rooms by house
            description: Delete rooms in a house by house ID
            operationId: deleteRooms
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: houseId
                  required: true
                  description: House ID
                  schema:
                      type: string
                      format: uuid
                      example: 123e4567-e89b-12d3-a456-426614174000
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ids:
                                    type: array
                                    items:
                                        type: string
                                        format: uuid
                                        description: Room ID
                                        example: 123e4567-e89b-12d3-a456-426614174000
                            required:
                                - ids
            responses:
                "200":
                    description: Room deleted successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DeleteRoomSuccess"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ValidationError"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/sschemas/TokenExpired"
                                    - $ref: "#/components/schemas/TokenInvalid"
                "404":
                    description: Room not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/RoomNotFound"
